// <auto-generated />
using System;
using DomenuBazesAtsiskaitimas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DomenuBazesAtsiskaitimas.Migrations
{
    [DbContext(typeof(UnuversityContext))]
    [Migration("20231122162722_nunulinimas")]
    partial class nunulinimas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyId");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LectureId"));

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("LectureId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("StudentId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Lecture", b =>
                {
                    b.HasOne("DomenuBazesAtsiskaitimas.Faculty", "Faculty")
                        .WithMany("Lectures")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomenuBazesAtsiskaitimas.Student", null)
                        .WithMany("Lectures")
                        .HasForeignKey("StudentId");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Student", b =>
                {
                    b.HasOne("DomenuBazesAtsiskaitimas.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Faculty", b =>
                {
                    b.Navigation("Lectures");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DomenuBazesAtsiskaitimas.Student", b =>
                {
                    b.Navigation("Lectures");
                });
#pragma warning restore 612, 618
        }
    }
}
